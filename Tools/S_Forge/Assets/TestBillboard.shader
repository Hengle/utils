// Shader created with Shader Forge v1.38 
// Shader Forge (c) Neat Corporation / Joachim Holmer - http://www.acegikmo.com/shaderforge/
// Note: Manually altering this data may prevent you from opening it in Shader Forge
/*SF_DATA;ver:1.38;sub:START;pass:START;ps:flbk:,iptp:0,cusa:False,bamd:0,cgin:,lico:1,lgpr:1,limd:0,spmd:1,trmd:0,grmd:0,uamb:True,mssp:True,bkdf:False,hqlp:False,rprd:False,enco:False,rmgx:True,imps:True,rpth:0,vtps:0,hqsc:True,nrmq:1,nrsp:0,vomd:0,spxs:False,tesm:0,olmd:1,culm:0,billboard:2,bsrc:0,bdst:1,dpts:2,wrdp:True,dith:0,atcv:False,rfrpo:True,rfrpn:Refraction,coma:15,ufog:False,aust:True,igpj:False,qofs:0,qpre:1,rntp:1,fgom:False,fgoc:False,fgod:False,fgor:False,fgmd:0,fgcr:0.5,fgcg:0.5,fgcb:0.5,fgca:1,fgde:0.01,fgrn:0,fgrf:300,stcl:False,atwp:False,stva:128,stmr:255,stmw:255,stcp:6,stps:0,stfa:0,stfz:0,ofsf:0,ofsu:0,f2p0:False,fnsp:False,fnfb:False,fsmp:False;n:type:ShaderForge.SFN_Final,id:3138,x:33038,y:32527,varname:node_3138,prsc:2|emission-3539-RGB;n:type:ShaderForge.SFN_Tex2d,id:3539,x:32336,y:32367,ptovrint:False,ptlb:Albedao,ptin:_Albedao,varname:node_3539,prsc:2,glob:False,taghide:False,taghdr:False,tagprd:False,tagnsco:False,tagnrm:False,tex:6e3b115e23faa3f479690d2889d82a0e,ntxv:0,isnm:False;proporder:3539;pass:END;sub:END;*/

Shader "Shader Forge/Billboard" {
    Properties {
        _Albedao ("Albedao", 2D) = "white" {}
    }
    SubShader {
        Tags {
            "RenderType"="Opaque"
        }
        Pass {
            Name "FORWARD"
            Tags {
                "LightMode"="ForwardBase"
            }
            
            
            CGPROGRAM
            #pragma vertex vert
            #pragma fragment frag
            #define UNITY_PASS_FORWARDBASE
            #include "UnityCG.cginc"
            #pragma multi_compile_fwdbase_fullshadows
            #pragma only_renderers d3d9 d3d11 glcore gles 
            #pragma target 3.0
            void Billboard(inout float4 vertex,inout float3 normal )
            				{
            					const float3 local = float3(vertex.x, vertex.y, 0); // this is the quad verts as generated by MakeMesh.cs in the localPos list.
            					const float3 offset = vertex.xyz - local;
            					const float3 upVector = UNITY_MATRIX_IT_MV[1].xyz;
            					const float3 forwardVector = UNITY_MATRIX_IT_MV[2].xyz; // camera forward
            					const float3 rightVector = normalize(cross(forwardVector, upVector));
            					float3 position = 0;
            					position += local.x * rightVector;
            					position += local.y * upVector;
            					position += local.z * forwardVector;
            					vertex = float4(offset + position, 1);
            					normal = forwardVector;
            				}
            uniform sampler2D _Albedao; uniform float4 _Albedao_ST;
            struct VertexInput {
                float4 vertex : POSITION;
                float3 normal : NORMAL;
                float2 texcoord0 : TEXCOORD0;
            };
            struct VertexOutput {
                float4 pos : SV_POSITION;
                float2 uv0 : TEXCOORD0;
            };
            VertexOutput vert (VertexInput v) {
                VertexOutput o = (VertexOutput)0;
                o.uv0 = v.texcoord0;
                Billboard(v.vertex,v.normal);
                o.pos = UnityObjectToClipPos( v.vertex );
                return o;
            }
            float4 frag(VertexOutput i) : COLOR {
////// Lighting:
////// Emissive:
                float4 _Albedao_var = tex2D(_Albedao,TRANSFORM_TEX(i.uv0, _Albedao));
                float3 emissive = _Albedao_var.rgb;
                float3 finalColor = emissive;
                return fixed4(finalColor,1);
            }
            ENDCG
        }
    }
    FallBack "Diffuse"
    CustomEditor "ShaderForgeMaterialInspector"
}
